CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE FUNCTION setup_tpch_schema()
RETURNS void AS $$
BEGIN
    -- Step 1: Create Role if it does not exist
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'postgres') THEN
        PERFORM dblink_exec('dbname=postgres', 'CREATE ROLE postgres WITH LOGIN PASSWORD ''p'';');
        PERFORM dblink_exec('dbname=postgres', 'ALTER ROLE postgres CREATEDB;');
    END IF;

    -- Step 2.1: Create Database (if not exists)
    PERFORM dblink_exec('dbname=postgres', 'CREATE DATABASE "TPC-H" WITH OWNER postgres;');


    -- Step 2.2: Connect to the TPC-H Database and create schema
    PERFORM dblink_exec('dbname=TPC-H', $sql$
        CREATE TABLE public.region (
            r_regionkey integer NOT NULL,
            r_name character(25) NOT NULL,
            r_comment character varying(152),
            CONSTRAINT region_pkey PRIMARY KEY (r_regionkey)
        );
        ALTER TABLE public.region OWNER to postgres;

        CREATE TABLE public.nation (
            n_nationkey integer NOT NULL,
            n_name character(25) NOT NULL,
            n_regionkey integer NOT NULL,
            n_comment character varying(152),
            CONSTRAINT nation_pkey PRIMARY KEY (n_nationkey),
            CONSTRAINT fk_nation FOREIGN KEY (n_regionkey)
                REFERENCES public.region (r_regionkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION
        );
        ALTER TABLE public.nation OWNER to postgres;

        CREATE TABLE public.part (
            p_partkey integer NOT NULL,
            p_name character varying(55) NOT NULL,
            p_mfgr character(25) NOT NULL,
            p_brand character(10) NOT NULL,
            p_type character varying(25) NOT NULL,
            p_size integer NOT NULL,
            p_container character(10) NOT NULL,
            p_retailprice numeric(15,2) NOT NULL,
            p_comment character varying(23) NOT NULL,
            CONSTRAINT part_pkey PRIMARY KEY (p_partkey)
        );
        ALTER TABLE public.part OWNER to postgres;

        CREATE TABLE public.supplier (
            s_suppkey integer NOT NULL,
            s_name character(25) NOT NULL,
            s_address character varying(40) NOT NULL,
            s_nationkey integer NOT NULL,
            s_phone character(15) NOT NULL,
            s_acctbal numeric(15,2) NOT NULL,
            s_comment character varying(101) NOT NULL,
            CONSTRAINT supplier_pkey PRIMARY KEY (s_suppkey),
            CONSTRAINT fk_supplier FOREIGN KEY (s_nationkey)
                REFERENCES public.nation (n_nationkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION
        );
        ALTER TABLE public.supplier OWNER to postgres;

        CREATE TABLE public.partsupp (
            ps_partkey integer NOT NULL,
            ps_suppkey integer NOT NULL,
            ps_availqty integer NOT NULL,
            ps_supplycost numeric(15,2) NOT NULL,
            ps_comment character varying(199) NOT NULL,
            CONSTRAINT partsupp_pkey PRIMARY KEY (ps_partkey, ps_suppkey),
            CONSTRAINT fk_ps_suppkey_partkey FOREIGN KEY (ps_partkey)
                REFERENCES public.part (p_partkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION,
            CONSTRAINT fk_ps_suppkey_suppkey FOREIGN KEY (ps_suppkey)
                REFERENCES public.supplier (s_suppkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION
        );
        ALTER TABLE public.partsupp OWNER to postgres;

        CREATE TABLE public.customer (
            c_custkey integer NOT NULL,
            c_name character varying(25) NOT NULL,
            c_address character varying(40) NOT NULL,
            c_nationkey integer NOT NULL,
            c_phone character(15) NOT NULL,
            c_acctbal numeric(15,2) NOT NULL,
            c_mktsegment character(10) NOT NULL,
            c_comment character varying(117) NOT NULL,
            CONSTRAINT customer_pkey PRIMARY KEY (c_custkey),
            CONSTRAINT fk_customer FOREIGN KEY (c_nationkey)
                REFERENCES public.nation (n_nationkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION
        );
        ALTER TABLE public.customer OWNER to postgres;

        CREATE TABLE public.orders (
            o_orderkey integer NOT NULL,
            o_custkey integer NOT NULL,
            o_orderstatus character(1) NOT NULL,
            o_totalprice numeric(15,2) NOT NULL,
            o_orderdate date NOT NULL,
            o_orderpriority character(15) NOT NULL,
            o_clerk character(15) NOT NULL,
            o_shippriority integer NOT NULL,
            o_comment character varying(79) NOT NULL,
            CONSTRAINT orders_pkey PRIMARY KEY (o_orderkey),
            CONSTRAINT fk_orders FOREIGN KEY (o_custkey)
                REFERENCES public.customer (c_custkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION
        );
        ALTER TABLE public.orders OWNER to postgres;

        CREATE TABLE public.lineitem (
            l_orderkey integer NOT NULL,
            l_partkey integer NOT NULL,
            l_suppkey integer NOT NULL,
            l_linenumber integer NOT NULL,
            l_quantity numeric(15,2) NOT NULL,
            l_extendedprice numeric(15,2) NOT NULL,
            l_discount numeric(15,2) NOT NULL,
            l_tax numeric(15,2) NOT NULL,
            l_returnflag character(1) NOT NULL,
            l_linestatus character(1) NOT NULL,
            l_shipdate date NOT NULL,
            l_commitdate date NOT NULL,
            l_receiptdate date NOT NULL,
            l_shipinstruct character(25) NOT NULL,
            l_shipmode character(10) NOT NULL,
            l_comment character varying(44) NOT NULL,
            CONSTRAINT lineitem_pkey PRIMARY KEY (l_orderkey, l_partkey, l_suppkey, l_linenumber),
            CONSTRAINT fk_lineitem_orderkey FOREIGN KEY (l_orderkey)
                REFERENCES public.orders (o_orderkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION,
            CONSTRAINT fk_lineitem_partkey FOREIGN KEY (l_partkey)
                REFERENCES public.part (p_partkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION,
            CONSTRAINT fk_lineitem_suppkey FOREIGN KEY (l_suppkey)
                REFERENCES public.supplier (s_suppkey) MATCH SIMPLE
                ON UPDATE NO ACTION ON DELETE NO ACTION
        );
        ALTER TABLE public.lineitem OWNER to postgres;
    $sql$);

END;
$$ LANGUAGE plpgsql;

SELECT setup_tpch_schema();

\c "TPC-H"
-- Step 3: Data loading commands (to be run separately after schema setup)
-- The user must specify the correct paths for their CSV files and execute the commands below:
-- Load data into the region table
\copy public.region (r_regionkey, r_name, r_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/region.csv' DELIMITER '|' CSV;

\copy public.nation (n_nationkey, n_name, n_regionkey, n_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/nation.csv' DELIMITER '|' CSV;

\copy public.part (p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/part.csv' DELIMITER '|' CSV;

\copy public.supplier (s_suppkey, s_name, s_address, s_nationkey, s_phone, s_acctbal, s_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/supplier.csv' DELIMITER '|' CSV;

\copy public.partsupp (ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, ps_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/partsupp.csv' DELIMITER '|' CSV;

\copy public.customer (c_custkey, c_name, c_address, c_nationkey, c_phone, c_acctbal, c_mktsegment, c_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/customer.csv' DELIMITER '|' CSV;

\copy public.orders (o_orderkey, o_custkey, o_orderstatus, o_totalprice, o_orderdate, o_orderpriority, o_clerk, o_shippriority, o_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/orders.csv' DELIMITER '|' CSV;

\copy public.lineitem (l_orderkey, l_partkey, l_suppkey, l_linenumber, l_quantity, l_extendedprice, l_discount, l_tax, l_returnflag, l_linestatus, l_shipdate, l_commitdate, l_receiptdate, l_shipinstruct, l_shipmode, l_comment) FROM '/Users/mouse/Documents/GitHub/SC3020/SC3020-Project-2/data/csv/lineitem.csv' DELIMITER '|' CSV;

-- Remember to create extension for pg_hint_plan
CREATE EXTENSION IF NOT EXISTS pg_hint_plan;